@model UserStoreProductModel
@{
    ViewData["Title"] = "Ürünler";
}
<div class="page-header mb-2" style="background-color:transparent">
    <div class="container-fluid">
        <ul class="breadcrumb" style="background-color:transparent">
            <li><a asp-controller="Home" asp-action="Index">Anasayfa</a></li>
            <li><a asp-controller="Products" asp-action="Index">Ürünler</a></li>
        </ul>
    </div>
</div>
<hr />
<table id="mytable" class="display" style="width: 100%;" role="grid"
       aria-describedby="example_info">
    <thead>
        <tr role="row">
            <td style="width: 1px;">
                <input type="checkbox" onclick="checkAll(this)">
            </td>
            <td>Resim</td>
            <td>Ürün Adı</td>
            <td>Varyant</td>
            <td>Fiyatı</td>
            <td>Adet</td>
            @foreach(var store in Model.Stores)
            {
                <td><div class="text-center"> <img class="img-fluid" src="~/img/stores/@store.Store.image" /> @store.Store.name</div> </td>
            }
        </tr>
    </thead>
    <tbody>
        @{
            foreach(var product in Model.Products)
            {
                <tr id="tr_@product.product_id" @*onclick="selectSingleCheckbox(chck_@product.product_id)"*@>
                    <td>
                        <input type="checkbox" name="selected[]" id="chck_@product.product_id" value="@product.product_id">
                    </td>
                    <td>
                        <img src="@product.image_url" class="img-thumbnail">
                    </td>
                    <td>
                        <p> @product.name</p>
                    </td>
                    <td>
                        <button onclick="showPopup('@Url.Action("Options","Products",new { productId = product.product_id },Context.Request.Scheme)', 'Varyantlar', optionsAfterOpen)" name="@product.name" title="Seçenekli Ürün" class="btn btn-outline-primary">
                            <i class="fa fa-list"></i>
                        </button>
                    </td>
                    <td>
                        @product.price.ToString("0.##") TL
                    </td>
                    <td>
                        <span>@product.quantity.ToString("0.##")</span>
                    </td>
                    @foreach(var store in Model.Stores)
                    {
                        <td>

                            @{
                                var category = product.ProductCategories?.FirstOrDefault()?.Category;
                                if(category?.CategoryStores?.FirstOrDefault(cs => cs.store_id == store.store_id && cs.is_matched) != null)
                                {
                                    var productStore = product.ProductStores?.FirstOrDefault(ps => ps.store_id == store.store_id);
                                    if(productStore != null)
                                    {
                                        var textStyle = productStore.sale_price > product.price ? "success" : productStore.sale_price < product.price ? "danger" : "info";
                                        <small class="text-sm-left text-@textStyle">@productStore.sale_price TL</small>
                                    }
                                    else
                                    {
                                        <small class="text-sm-left text-warning">Gönderilmedi</small>
                                    }
                                    <button onclick="showPopup('@Url.Action("EditStoreProduct","Products",new { productId = product.product_id },Context.Request.Scheme)', '@store.Store.name Ürün Ayarları', editStoreProductAfterOpen)" class="btn btn-outline-primary">
                                        <i class="fa fa-sm fa-pencil-alt"></i>
                                    </button>
                                }
                                else
                                {
                                    var categoryInfo = category?.name != null ? $"{category.name} kategorisini eşleştirin." : "Kategoriler eşleştirilmedi.";
                                    <small class="text-danger">@categoryInfo</small>
                                }
                            }
                        </td>
                    }
                </tr>
            }
        }

    </tbody>
</table>
<script>
    function checkAll(bx) {
        var cbs = document.getElementsByTagName('input');
        for (var i = 0; i < cbs.length; i++) {
            if (cbs[i].type == 'checkbox') {
                cbs[i].checked = bx.checked;
            }
        }
        function getImage(image_url) {
            var http = new XMLHttpRequest();

            http.open('HEAD', image_url, false);
            http.send();

            if (http.status == 404)
                return '~/images/admin.jpg';
            return image_url;
        }
    }
    document.getElementById("products").className += " active";
</script>